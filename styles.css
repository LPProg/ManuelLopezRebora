* {
    border: 0; /* Elimina cualquier borde por defecto */
    box-sizing: border-box; /* Para asegurar que el padding no afecte el tamaño total */
}

html, body {
    height: 100vh;
    width: 100%;
    margin: 0; /* Eliminar márgenes predeterminados */
    padding: 0; /* Eliminar rellenos predeterminados */
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Evita que el contenido se desborde */
}

/* Contenedor principal */
.container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100vh; /* Asegura que el contenedor ocupe toda la altura */
    padding: 20px;
    position: relative;
}

/* Contenido principal */
main {
    padding: 10px;
    flex: 1;
    background: linear-gradient(135deg, #4a0f67, #6a1b9a, #8c2eb8); /* Fondo morado extendido */
    display: flex;
    flex-direction: column;
    height: 100%; /* Ocupa toda la altura del contenedor */
    overflow: hidden; /* Evita desplazamientos innecesarios */
    position: relative; /* Asegura que todo el fondo se vea correctamente */
}

/* Estilo de la escena */
.scene {
    position: relative;
    width: 100%;
    height: 90vh; /* Asegura que la escena ocupe toda la altura visible */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Evita que los elementos dentro de la escena se desborden */
    transition: transform 0.5s ease-in-out;
    background: #111; /* Fondo oscuro para que el cubo resalte */
    padding: 20px;
    border-radius: 20px; /* Bordes redondeados en el contenedor */
    box-shadow: 0 0 40px rgba(0, 0, 0, 0.7); /* Sombra del contenedor */
}

/* El cubo */
.cube {
    width: 100px;
    height: 100px;
    position: relative;
    transform-style: preserve-3d;
    animation: rotate 10s infinite linear;
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.6);
    z-index: 10; /* Asegurar que el cubo esté por encima del panel */
}

/* Estilo para las caras del cubo */
.face {
    position: absolute;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, rgba(106, 27, 154, 1), rgba(129, 62, 176, 1));
    border: 2px solid #5e1f8a; /* Borde con un color similar al del fondo */
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
    font-weight: bold;
    text-align: center;
    color: white;
    border-radius: 10px; /* Bordes redondeados para un efecto más suave */
    backface-visibility: hidden; /* Ocultar la cara posterior del cubo */
    box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.4); /* Sombra para darle profundidad */
    overflow: hidden; /* Evitar que el contenido se desborde */
    transition: transform 0.6s ease-in-out, opacity 0.6s ease;
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

.face.flipped {
    transform: rotateY('180deg');
}

.face.card-content {
    display: none;
    backface-visibility: hidden;
}

.face.flipped .card-content {
    display: block; /* Mostrar el contenido cuando la cara está girada */
}

/* Ajustar escala para las caras al expandirse */
.face.expanded {
    position: fixed;
    top: 50%;
    left: 50%;
    width: 75%; /* Ampliar a 75% del viewport */
    height: 75%; /* Ampliar a 75% del viewport */
    z-index: 1000;
    transform: translate(-50%, -50%) scale(1) rotateY(0deg); /* Centrar y mantener recta */
    transition: all 0.6s ease-in-out;
}

.cube.hidden {
    display: none;
}
/* Posicionamiento de las caras */
.front {
    transform: rotateY(0deg) translateZ(150px); /* Frente */
}
.right {
    transform: rotateY(90deg) translateZ(150px); /* Derecha */
}
.back {
    transform: rotateY(180deg) translateZ(150px); /* Atrás */
}
.left {
    transform: rotateY(-90deg) translateZ(150px); /* Atrás */
}
.top {
    transform: rotateX(90deg) translateZ(150px); /* Arriba */
    background: url('path/to/your/photo.jpg') no-repeat center center;
    background-size: cover;
}
.bottom {
    transform: rotateX(-90deg) translateZ(150px); /* Abajo */
    background-color: #6a1b9a;
    color: white;
    font-size: 18px;
    font-weight: normal;
}

/* Añadir botón de cerrar en el panel */
.info-panel {
    display: none; /* Escondemos el panel al principio */
    position: fixed;
    top: 50%; /* Centrado vertical */
    right: 20px; /* Alineado a la derecha */
    width: 300px;
    background-color: #4A2A68; /* Fondo oscuro */
    color: white; /* Letras en blanco */
    padding: 10px;
    border-radius: 10px; /* Bordes redondeados */
    box-shadow: #4A2A68; /* Sombra para un mejor efecto */
    transform: translateY(-50%); /* Centra el panel verticalmente */
    overflow-y: auto;
    max-height: 80%; /* Evita que el panel se salga de la pantalla si el contenido es muy largo */
}

/* Panel activo (cuando se muestra) */
.info-panel.panel-active {
    display: block;
}

/* Contenido dentro del panel */
.info-content {
    padding: 10px;
    background-color: #271835; /* Fondo púrpura oscuro */
    border-radius: 5px; /* Bordes internos redondeados */
}

/* Estilos para el contenido de las caras */
.face .header {
    font-weight: bold;
}

.card-content p {
    margin: 0;
    line-height: 1.5;
}

/* Panel oculto */
.info-panel.panel-hidden {
    transform: translateX(100%); /* Esconde el panel */
}

/* Botón de cierre dentro del panel */
.info-panel .close-btn {
    position: absolute; /* Posición fija respecto al panel */
    top: 10px; /* Espaciado desde la parte superior */
    right: 10px; /* Espaciado desde el borde derecho */
    width: 30px; /* Tamaño del botón */
    height: 30px; /* Tamaño del botón */
    background-color: transparent; /* Sin fondo */
    border: none;
    display: flex;
    justify-content: center;
    align-items: center; /* Centrar la cruz */
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.info-panel .close-btn::before,
.info-panel .close-btn::after {
    content: '';
    position: absolute;
    width: 18px; /* Grosor de las líneas */
    height: 2px; /* Altura de las líneas */
    background-color: black; /* Color negro para la cruz */
    border-radius: 2px;
}

.info-panel .close-btn::before {
    transform: rotate(45deg); /* Línea diagonal (parte superior izquierda a inferior derecha) */
}

.info-panel .close-btn::after {
    transform: rotate(-45deg); /* Línea diagonal (parte superior derecha a inferior izquierda) */
}

.info-panel .close-btn:hover {
    background-color: transparent; /* Sin color de fondo al pasar el ratón */
}

.header {
    font-family: 'Roboto', sans-serif;
    font-size: 20px;
    font-weight: bold;
    color: white;
    text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.6);
}

.card-content {
    display: none;
    font-family: 'Arial', sans-serif;
    padding: 20px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    font-size: 16px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.6);
    max-width: 100%;
    margin-top: 10px;
}

.face.active .card-content {
    display: block;
}

.face:hover {
    background: initial;
    cursor: pointer;
}

/* Texto dentro de las caras */
.face {
    font-family: 'Roboto', sans-serif;
    font-size: 20px;
    font-weight: normal;
    color: white;
    text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.6);
}

/* Animación de rotación (actualizada) */
@keyframes rotateCube {
    0% {
        transform: rotateY(0deg); /* Mostrar el frente */
    }
    25% {
        transform: rotateY(-90deg); /* Mostrar la cara derecha */
    }
    50% {
        transform: rotateY(-180deg); /* Mostrar la cara trasera */
    }
    75% {
        transform: rotateY(-270deg); /* Mostrar la cara izquierda */
    }
    100% {
        transform: rotateY(-360deg); /* Volver al frente */
    }
}
